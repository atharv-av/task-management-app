{"version":3,"sources":["components/DeleteTaskButton.js","components/Task.js","components/NewTaskButton.js","components/NewTaskForm.js","components/SortBy.js","utilityFunctions.js","components/Header.js","components/SearchTasks.js","App.js","pages/SignInPage.js","index.js"],"names":["DeleteTaskButton","props","React","createElement","className","type","onClick","deleteTask","taskID","FontAwesomeIcon","icon","faTrashAlt","Task","task_id","task_title","taskTitle","task_desc","taskDesc","task_completed","taskCompleted","task_scheduled_dt","taskScheduledDt","priority_desc","priorityDesc","task","cleanedScheduledDt","substring","priorityColour","id","autoComplete","name","value","onChange","handleTaskUpdate","onBlur","putTaskUpdate","checked","placeholder","rows","cols","NewTaskButton","postNewTask","NewTaskForm","newTaskTitle","handleNewTaskChange","onSubmit","e","preventDefault","SortBy","Component","constructor","super","this","state","selected","onButtonClick","bind","onSelectChange","refactorSelectValue","selectValue","orderByField","split","trim","direction","replace","newValue","target","setState","sortOrder","sortTasks","render","convertToNumber","string","Number","Header","SignedOut","SignInButton","SignedIn","UserButton","SearchTasks","_ref","onSearchResults","searchTitle","setSearchTitle","useState","async","response","fetch","encodeURIComponent","ok","Error","data","json","error","console","App","isFetched","tasks","taskOrder","getAllTasks","handleSearchResults","newTask","res","statusText","message","toast","results","parentNode","fieldToUpdate","updateValue","updatedTaskState","map","taskCopy","JSON","parse","stringify","updateTask","forEach","payload","fieldName","loadingToast","loading","method","headers","body","then","status","success","catch","window","confirm","url","errorData","every","val","reorderedTasks","sort","a","b","firstVal","secondVal","task_creation_dt","componentDidMount","Toaster","position","key","length","SignInPage","style","margin","PUBLISHABLE_KEY","process","router","createBrowserRouter","children","path","element","ReactDOM","ClerkProvider","publishableKey","afterSignOutUrl","signInForceRedirectUrl","RouterProvider","document","getElementById"],"mappings":"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","file":"static/js/main.bf5e71b8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/DeleteTaskButton.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst DeleteTaskButton = (props) => {\n  return (\n    <button\n      className=\"deleteTaskButton\"\n      type=\"button\"\n      onClick={() => props.deleteTask(props.taskID)}\n    >\n      <FontAwesomeIcon icon={faTrashAlt} />\n    </button>\n  );\n};\n\nexport default DeleteTaskButton;\n","import React from \"react\";\nimport DeleteTaskButton from \"./DeleteTaskButton\";\nimport \"../css/Task.css\";\n\nconst Task = (props) => {\n  const {\n    task_id: taskID,\n    task_title: taskTitle,\n    task_desc: taskDesc,\n    task_completed: taskCompleted,\n    task_scheduled_dt: taskScheduledDt,\n    priority_desc: priorityDesc,\n  } = props.task;\n\n  const cleanedScheduledDt = taskScheduledDt ? taskScheduledDt.substring(0, 10) : \"\";\n\n  const priorityColour = priorityDesc === \"High\" ? \"task__priority--high\" : \"task__priority\";\n\n  return (\n    <div className=\"task\">\n      <form id={taskID} autoComplete=\"off\">\n        {/* Task Title */}\n        <input\n          className=\"task__title\"\n          type=\"text\"\n          name=\"task_title\"  // Ensure this matches the backend field name\n          value={taskTitle}\n          onChange={props.handleTaskUpdate}\n          onBlur={props.putTaskUpdate}  // Update on blur\n        />\n        \n        {/* Task Completed */}\n        <input\n          className=\"task__completed\"\n          type=\"checkbox\"\n          name=\"task_completed\"  // This field corresponds to the \"task_completed\" field in the backend\n          checked={taskCompleted}\n          onChange={props.handleTaskUpdate}\n          onBlur={props.putTaskUpdate}\n        />\n        \n        {/* Task Description */}\n        <textarea\n        placeholder=\"Description\"\n          className=\"task__desc\"\n          name=\"task_desc\"  // This should match the backend field \"task_desc\"\n          rows=\"3\"\n          cols=\"20\"\n          value={taskDesc}\n          onChange={props.handleTaskUpdate}\n          onBlur={props.putTaskUpdate}\n        />\n        \n        {/* Task Scheduled Date */}\n        <input\n          className=\"task__scheduledDt\"\n          type=\"date\"\n          name=\"task_scheduled_dt\"  // This matches the \"task_scheduled_dt\" field in the backend\n          value={cleanedScheduledDt}\n          onChange={props.handleTaskUpdate}\n          onBlur={props.putTaskUpdate}\n        />\n        \n        {/* Priority Dropdown */}\n        <select\n          className={priorityColour}\n          name=\"priority_desc\"  // Matches \"priority_desc\" in the backend\n          value={priorityDesc}\n          onChange={props.handleTaskUpdate}\n          onBlur={props.putTaskUpdate}\n        >\n          <option>High</option>\n          <option>Medium</option>\n          <option>Low</option>\n        </select>\n        \n        <DeleteTaskButton deleteTask={props.deleteTask} taskID={taskID} />\n      </form>\n    </div>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport \"../css/NewTaskButton.css\";\n\nconst NewTaskButton = (props) => {\n  return (\n    <button className=\"newTaskButton\" type=\"button\" onClick={props.postNewTask}>\n      Add Task\n    </button>\n  );\n};\n\nexport default NewTaskButton;\n","import React from \"react\";\nimport NewTaskButton from \"./NewTaskButton\";\nimport \"../css/NewTaskForm.css\";\n\nconst NewTaskForm = (props) => {\n  const { newTaskTitle, handleNewTaskChange, postNewTask } = props;\n\n  // Handle form submit explicitly to prevent accidental submits\n  const handleSubmit = (e) => {\n    e.preventDefault();  // Prevent default form submission behavior\n    postNewTask(); // Manually trigger task creation\n  };\n\n  return (\n    <div className=\"newTaskForm\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"newTaskForm__titleInput\"\n          type=\"text\"\n          placeholder=\"Task Title\"\n          value={newTaskTitle}\n          onChange={handleNewTaskChange} // Update state as user types\n        />\n        <NewTaskButton postNewTask={postNewTask} /> {/* Button to trigger postNewTask */}\n      </form>\n    </div>\n  );\n};\n\nexport default NewTaskForm;\n","import React, { Component } from \"react\";\nimport \"../css/SortBy.css\";\n\nclass SortBy extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      selected: \"Created Date (Descending)\",\n    };\n\n    this.onButtonClick = this.onButtonClick.bind(this);\n    this.onSelectChange = this.onSelectChange.bind(this);\n    this.refactorSelectValue = this.refactorSelectValue.bind(this);\n  }\n\n  refactorSelectValue(selectValue) {\n    const lookup = {\n      \"Created Date\": \"task_creation_dt\",\n      \"Scheduled Date\": \"task_scheduled_dt\",\n    };\n\n    const orderByField = selectValue.split(\"(\")[0].trim();\n    const direction = selectValue.split(\"(\")[1].replace(/[)]/, \"\");\n\n    return {\n      orderByField: lookup[orderByField],\n      direction,\n    };\n  }\n\n  onSelectChange(e) {\n    const newValue = e.target.value;\n\n    this.setState({ selected: newValue });\n  }\n\n  onButtonClick() {\n    const sortOrder = this.state.selected;\n\n    this.props.sortTasks(this.refactorSelectValue(sortOrder));\n  }\n\n  render() {\n    return (\n      <div className=\"sortBy\">\n        <label className=\"sortBy__label\">\n          Sort By:\n          <select\n            className=\"sortBy__dropdown\"\n            value={this.state.selected}\n            onChange={this.onSelectChange}\n          >\n            <option>Created Date (Descending)</option>\n            <option>Created Date (Ascending)</option>\n            <option>Scheduled Date (Descending)</option>\n            <option>Scheduled Date (Ascending)</option>\n          </select>\n        </label>\n        <button\n          className=\"sortBy__button\"\n          type=\"button\"\n          onClick={this.onButtonClick}\n        >\n          Sort\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SortBy;\n","const encodeUpdateValue = (updateValue) => {\n  const encodedStr = updateValue\n    .replace(/%/g, \"%25\")\n    .replace(/[\\n]/g, \"%0A\")\n    .replace(/\\//g, \"%2f\")\n    .replace(/\\\\/g, \"%5C\")\n    .replace(/\\?/g, \"%3f\")\n    .replace(/'/g, \"''\")\n    .replace(/#/g, \"%23\");\n\n  return encodedStr;\n};\n\nconst convertToNumber = (string) => {\n  if (string === null) return null;\n\n  const convertedNum = Number(string.replace(/[^0-9]/g, \"\"));\n\n  return convertedNum;\n};\n\nexport { encodeUpdateValue, convertToNumber };\n","import React from \"react\";\nimport { SignedIn, SignedOut, SignInButton, UserButton } from \"@clerk/clerk-react\";\n\nexport default function Header() {\n  return (\n    <div>\n      <SignedOut>\n        <SignInButton />\n      </SignedOut>\n      <SignedIn>\n        <UserButton />\n      </SignedIn>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport \"../css/SearchTasks.css\"\n\nconst SearchTasks = ({ onSearchResults }) => {\n  const [searchTitle, setSearchTitle] = useState(\"\");\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/searchTasks?title=${encodeURIComponent(searchTitle)}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch tasks\");\n      }\n      const data = await response.json();\n      onSearchResults(data); // Pass results to parent component\n    } catch (error) {\n      console.error(\"Search failed:\", error);\n    }\n  };\n\n  return (\n    <div className=\"search-tasks\">\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"Search tasks by title...\"\n          value={searchTitle}\n          onChange={(e) => setSearchTitle(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchTasks;\n","import React, { Component } from \"react\";\nimport Task from \"./components/Task\";\nimport NewTaskForm from \"./components/NewTaskForm\";\nimport SortBy from \"./components/SortBy\";\nimport \"./css/App.css\";\nimport { convertToNumber } from \"./utilityFunctions\";\nimport Header from \"./components/Header\";\nimport { SignedIn } from \"@clerk/clerk-react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport SearchTasks from \"./components/SearchTasks\";\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      error: null,\n      isFetched: false,\n      tasks: [],\n      taskOrder: {\n        orderByField: \"task_creation_dt\",\n        direction: \"Descending\",\n      },\n      newTaskTitle: \"\",\n    };\n\n    this.getAllTasks = this.getAllTasks.bind(this);\n    this.putTaskUpdate = this.putTaskUpdate.bind(this);\n    this.handleTaskUpdate = this.handleTaskUpdate.bind(this);\n    this.handleNewTaskChange = this.handleNewTaskChange.bind(this);\n    this.postNewTask = this.postNewTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.sortTasks = this.sortTasks.bind(this);\n    this.handleSearchResults = this.handleSearchResults.bind(this);\n  }\n\n  async getAllTasks(newTask) {\n    const { orderByField, direction } = this.state.taskOrder;\n\n    const url = `${process.env.REACT_APP_API_URL}/allTasks`;\n    try {\n      const res = await fetch(url);\n      if (!res.ok) throw new Error(`Failed to fetch tasks: ${res.statusText}`);\n      const data = await res.json();\n      this.setState({\n        isFetched: true,\n        tasks: data,\n      });\n    } catch (error) {\n      this.setState({\n        error: error.message,\n        isFetched: true,\n      });\n      toast.error(\"Failed to fetch tasks. Please try again.\");\n    }\n  }\n\n  handleSearchResults(results) {\n    this.setState({ tasks: results });\n  }\n\n  handleTaskUpdate(e) {\n    const taskID = Number(e.target.parentNode.id);\n    const fieldToUpdate = e.target.name;\n    let updateValue;\n\n    if (fieldToUpdate === \"task_completed\") {\n      updateValue = e.target.checked;\n    } else if (fieldToUpdate === \"task_scheduled_dt\") {\n      if (e.target.value !== \"\") {\n        updateValue = e.target.value + \"T00:00:00.000Z\";\n      } else {\n        updateValue = null;\n      }\n    } else {\n      updateValue = e.target.value;\n    }\n\n    const updatedTaskState = this.state.tasks.map((task) => {\n      const updateTask = (task) => {\n        const taskCopy = JSON.parse(JSON.stringify(task));\n        taskCopy[fieldToUpdate] = updateValue;\n\n        return taskCopy;\n      };\n\n      if (task.task_id === taskID) {\n        return updateTask(task);\n      } else {\n        return task;\n      }\n    });\n\n    this.setState({ tasks: updatedTaskState });\n  }\n\n  putTaskUpdate(e) {\n    const taskID = Number(e.target.parentNode.id);\n    const fieldToUpdate = e.target.name;\n    let updateValue;\n\n    this.state.tasks.forEach((task) => {\n      if (task.task_id === taskID) updateValue = task[fieldToUpdate];\n    });\n\n    if (fieldToUpdate === \"task_scheduled_dt\" && updateValue === \"\") {\n      updateValue = null;\n    }\n\n    if (fieldToUpdate === \"task_title\" && updateValue === \"\") return;\n\n    if (updateValue === \"\" && fieldToUpdate !== \"task_scheduled_dt\") {\n      updateValue = \"null\";\n    }\n    const payload = {\n      taskID: taskID,\n      fieldName: fieldToUpdate,\n      newValue: updateValue,\n    };\n\n    const loadingToast = toast.loading(\"Updating task...\");\n\n    fetch(`${process.env.REACT_APP_API_URL}/amendTask`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          toast.success(\"Task updated successfully\", {\n            id: loadingToast,\n          });\n        } else {\n          throw new Error(\"Failed to update task\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error updating task:\", error);\n        toast.error(\"Failed to update task\", {\n          id: loadingToast,\n        });\n      });\n  }\n\n  async deleteTask(taskID) {\n    if (window.confirm(\"Are you sure that you want to delete this task?\")) {\n      const url = `${process.env.REACT_APP_API_URL}/deleteTask/${taskID}`;\n      const loadingToast = toast.loading(\"Deleting task...\");\n\n      try {\n        const res = await fetch(url, { method: \"DELETE\" });\n        if (res.ok) {\n          this.getAllTasks(false);\n          toast.success(\"Task deleted successfully\", {\n            id: loadingToast,\n          });\n        } else {\n          throw new Error(`Failed to delete task: ${res.statusText}`);\n        }\n      } catch (error) {\n        console.error(error.message);\n        toast.error(\"Failed to delete task\", {\n          id: loadingToast,\n        });\n      }\n    }\n  }\n\n  handleNewTaskChange(e) {\n    const newTaskTitle = e.target.value;\n\n    this.setState({ newTaskTitle });\n  }\n\n  async postNewTask() {\n    const { newTaskTitle } = this.state;\n\n    if (!newTaskTitle.trim()) {\n      toast.error(\"Task title cannot be empty\");\n      return;\n    }\n\n    const url = `${process.env.REACT_APP_API_URL}/addTask`;\n    const payload = { taskTitle: newTaskTitle.trim() };\n    const loadingToast = toast.loading(\"Creating new task...\");\n\n    try {\n      const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.error || \"Failed to create task.\");\n      }\n\n      const data = await res.json();\n      this.setState({ newTaskTitle: \"\" });\n      this.getAllTasks();\n\n      toast.success(\"Task created successfully\", {\n        id: loadingToast,\n      });\n    } catch (error) {\n      console.error(\"Error creating task:\", error.message);\n      toast.error(error.message || \"Failed to create task\", {\n        id: loadingToast,\n      });\n    }\n  }\n\n  sortTasks(selectValue) {\n    const { orderByField, direction } = selectValue;\n\n    const allNulls = this.state.tasks.every((val) => {\n      return val[orderByField] === null;\n    });\n\n    if (allNulls) return;\n\n    const reorderedTasks = this.state.tasks\n      .map((val) => {\n        return val;\n      })\n      .sort((a, b) => {\n        const firstVal = convertToNumber(a[orderByField]);\n        const secondVal = convertToNumber(b[orderByField]);\n\n        if (firstVal === null && secondVal === null) {\n          return (\n            convertToNumber(b.task_creation_dt) -\n            convertToNumber(a.task_creation_dt)\n          );\n        }\n\n        if (firstVal === null) {\n          return 1;\n        }\n\n        if (secondVal === null) {\n          return -1;\n        }\n\n        if (direction === \"Ascending\") {\n          return firstVal - secondVal;\n        }\n\n        if (direction === \"Descending\") {\n          return secondVal - firstVal;\n        }\n\n        return 0;\n      });\n\n    this.setState({\n      tasks: reorderedTasks,\n      taskOrder: {\n        orderByField,\n        direction,\n      },\n    });\n  }\n\n  componentDidMount() {\n    this.getAllTasks(false);\n  }\n\n  render() {\n    const { error, isFetched } = this.state;\n    if (error) {\n      return (\n        <section>\n          <p>Sorry, something went wrong. Please try again.</p>\n          <Toaster position=\"top-right\" />\n        </section>\n      );\n    } else if (!isFetched) {\n      return (\n        <section>\n          <p>Your tasks are loading...</p>\n          <Toaster position=\"top-right\" />\n        </section>\n      );\n    } else {\n      const tasks = this.state.tasks.map((task) => {\n        return (\n          <Task\n            key={task.task_id}\n            task={task}\n            handleTaskUpdate={this.handleTaskUpdate}\n            putTaskUpdate={this.putTaskUpdate}\n            deleteTask={this.deleteTask}\n          />\n        );\n      });\n      return (\n        <section className=\"tasksContainer\">\n          <Header />\n          <SignedIn>\n            <NewTaskForm\n              newTaskTitle={this.state.newTaskTitle}\n              handleNewTaskChange={this.handleNewTaskChange}\n              postNewTask={this.postNewTask}\n            />\n            <SearchTasks onSearchResults={this.handleSearchResults} />\n            {tasks.length > 0 ? <SortBy sortTasks={this.sortTasks} /> : null}\n            {tasks}\n            <Toaster position=\"top-right\" />\n          </SignedIn>\n        </section>\n      );\n    }\n  }\n}\n\nexport default App;\n","import { SignedOut } from \"@clerk/clerk-react\";\nimport React from \"react\";\n\nconst SignInPage = () => {\n  return (\n    <SignedOut>\n      <h2 style={{ margin: \"auto\" }}>Please log in to continue</h2>\n    </SignedOut>\n  );\n};\n\nexport default SignInPage;\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport { ClerkProvider } from \"@clerk/clerk-react\";\nimport SignInPage from \"./pages/SignInPage\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { Toaster } from \"react-hot-toast\";\n\nconst PUBLISHABLE_KEY = process.env.REACT_APP_CLERK_PUBLISHABLE_KEY;\n\nif (!PUBLISHABLE_KEY) {\n  throw new Error(\"Missing Publishable Key\");\n}\n\nconst router = createBrowserRouter([\n  {\n    children: [\n      {\n        path: \"/\",\n      },\n      {\n        path: \"/sign-in\",\n        element: <SignInPage />,\n      },\n    ],\n  },\n]);\n\nReactDOM.render(\n  <ClerkProvider\n    publishableKey={PUBLISHABLE_KEY}\n    afterSignOutUrl=\"/sign-in\"\n    signInForceRedirectUrl=\"/\"\n  >\n    <App />\n    <RouterProvider router={router} />\n  </ClerkProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}